$date
	Mon Aug  6 16:48:27 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 4 ! sum [3:0] $end
$var wire 1 " carry $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % c_in $end
$scope module r $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % c_in $end
$var wire 4 ( sum [3:0] $end
$var wire 1 " carry $end
$var wire 1 ) carr_3 $end
$var wire 1 * carr_2 $end
$var wire 1 + carr_1 $end
$scope module f1 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 % c_in $end
$var wire 1 + c_out $end
$var wire 1 . sum1 $end
$var wire 1 / sum $end
$var wire 1 0 c_2 $end
$var wire 1 1 c_1 $end
$scope module h1 $end
$var wire 1 1 carry $end
$var wire 1 , in1 $end
$var wire 1 - in2 $end
$var wire 1 . sum $end
$upscope $end
$scope module h2 $end
$var wire 1 0 carry $end
$var wire 1 . in1 $end
$var wire 1 % in2 $end
$var wire 1 / sum $end
$upscope $end
$upscope $end
$scope module f2 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 + c_in $end
$var wire 1 * c_out $end
$var wire 1 4 sum1 $end
$var wire 1 5 sum $end
$var wire 1 6 c_2 $end
$var wire 1 7 c_1 $end
$scope module h1 $end
$var wire 1 7 carry $end
$var wire 1 2 in1 $end
$var wire 1 3 in2 $end
$var wire 1 4 sum $end
$upscope $end
$scope module h2 $end
$var wire 1 6 carry $end
$var wire 1 4 in1 $end
$var wire 1 + in2 $end
$var wire 1 5 sum $end
$upscope $end
$upscope $end
$scope module f3 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 * c_in $end
$var wire 1 ) c_out $end
$var wire 1 : sum1 $end
$var wire 1 ; sum $end
$var wire 1 < c_2 $end
$var wire 1 = c_1 $end
$scope module h1 $end
$var wire 1 = carry $end
$var wire 1 8 in1 $end
$var wire 1 9 in2 $end
$var wire 1 : sum $end
$upscope $end
$scope module h2 $end
$var wire 1 < carry $end
$var wire 1 : in1 $end
$var wire 1 * in2 $end
$var wire 1 ; sum $end
$upscope $end
$upscope $end
$scope module f4 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 ) c_in $end
$var wire 1 " c_out $end
$var wire 1 @ sum1 $end
$var wire 1 A sum $end
$var wire 1 B c_2 $end
$var wire 1 C c_1 $end
$scope module h1 $end
$var wire 1 C carry $end
$var wire 1 > in1 $end
$var wire 1 ? in2 $end
$var wire 1 @ sum $end
$upscope $end
$scope module h2 $end
$var wire 1 B carry $end
$var wire 1 @ in1 $end
$var wire 1 ) in2 $end
$var wire 1 A sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
b0 (
b0 '
b0 &
0%
b0 $
b0 #
0"
b0 !
$end
#10
1/
b1001 !
b1001 (
1A
1.
1@
1-
1>
b1 $
b1 '
b1000 #
b1000 &
#20
15
0A
1"
b10 !
b10 (
0/
1+
0@
1C
0.
11
1?
1,
b1001 $
b1001 '
b1001 #
b1001 &
#30
1B
1)
1<
0A
1"
1*
b10 !
b10 (
0;
1@
0C
17
1:
13
0?
12
18
b11 $
b11 '
b1111 #
b1111 &
#40
0)
05
16
1*
0A
0B
1;
0<
14
07
0@
1C
0:
b101 !
b101 (
1/
03
1?
08
1%
b1001 $
b1001 '
b1011 #
b1011 &
#50
